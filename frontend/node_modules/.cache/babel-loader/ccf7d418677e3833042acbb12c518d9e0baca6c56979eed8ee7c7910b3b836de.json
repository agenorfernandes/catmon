{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ageno\\\\OneDrive\\\\Agenor Fernandes\\\\Katmon\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport LoadingSpinner from '../components/Shared/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Verificar autenticação ao iniciar\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        // Configura o token no cabeçalho padrão do axios\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Busca dados do usuário\n        const response = await axios.get('/api/auth/me');\n        setUser(response.data);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Erro ao verificar autenticação:', error);\n        // Limpa dados em caso de erro\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        setIsAuthenticated(false);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []); // Executar apenas uma vez ao montar o componente\n\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Adicionar função para atualizar dados do usuário\n  const updateUser = userData => {\n    setUser(prevUser => ({\n      ...prevUser,\n      ...userData\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout,\n      updateUser,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","LoadingSpinner","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","initAuth","token","localStorage","getItem","defaults","headers","common","response","get","data","error","console","removeItem","login","userData","setItem","logout","updateUser","prevUser","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/ageno/OneDrive/Agenor Fernandes/Katmon/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport LoadingSpinner from '../components/Shared/LoadingSpinner';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Verificar autenticação ao iniciar\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Configura o token no cabeçalho padrão do axios\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        \n        // Busca dados do usuário\n        const response = await axios.get('/api/auth/me');\n        \n        setUser(response.data);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Erro ao verificar autenticação:', error);\n        // Limpa dados em caso de erro\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        setIsAuthenticated(false);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n  }, []); // Executar apenas uma vez ao montar o componente\n\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Adicionar função para atualizar dados do usuário\n  const updateUser = (userData) => {\n    setUser(prevUser => ({ ...prevUser, ...userData }));\n  };\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <AuthContext.Provider value={{ \n      isAuthenticated, \n      user, \n      login, \n      logout,\n      updateUser,\n      loading \n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}