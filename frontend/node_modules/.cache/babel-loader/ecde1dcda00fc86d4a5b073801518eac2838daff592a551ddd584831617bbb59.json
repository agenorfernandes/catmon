{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || '';\n\n// Lista de avatares disponíveis\nconst defaultAvatars = [{\n  id: 'cat1',\n  url: '/assets/avatars/cat1.png',\n  name: 'Gato Laranja'\n}, {\n  id: 'cat2',\n  url: '/assets/avatars/cat2.png',\n  name: 'Gato Preto'\n}, {\n  id: 'cat3',\n  url: '/assets/avatars/cat3.png',\n  name: 'Gato Malhado'\n}, {\n  id: 'cat4',\n  url: '/assets/avatars/cat4.png',\n  name: 'Gato Siamês'\n}];\n\n// Obter lista de avatares disponíveis\nexport const getAvailableAvatars = async () => {\n  try {\n    // Primeiro tenta buscar do backend\n    const response = await axios.get(`${API_URL}/api/avatars`);\n    return response.data;\n  } catch (error) {\n    // Se falhar, retorna lista padrão\n    console.log('Usando lista padrão de avatares');\n    return defaultAvatars;\n  }\n};\n\n// Atualizar avatar do usuário\nexport const updateUserAvatar = async avatarId => {\n  const token = localStorage.getItem('token');\n  const response = await axios.put(`${API_URL}/api/users/profile/avatar`, {\n    avatarId\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nexport default {\n  getAvailableAvatars,\n  updateUserAvatar\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","defaultAvatars","id","url","name","getAvailableAvatars","response","get","data","error","console","log","updateUserAvatar","avatarId","token","localStorage","getItem","put","headers"],"sources":["C:/Users/ageno/OneDrive/Agenor Fernandes/Katmon/frontend/src/services/avatarService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '';\r\n\r\n// Lista de avatares disponíveis\r\nconst defaultAvatars = [\r\n  {\r\n    id: 'cat1',\r\n    url: '/assets/avatars/cat1.png',\r\n    name: 'Gato Laranja'\r\n  },\r\n  {\r\n    id: 'cat2',\r\n    url: '/assets/avatars/cat2.png',\r\n    name: 'Gato Preto'\r\n  },\r\n  {\r\n    id: 'cat3',\r\n    url: '/assets/avatars/cat3.png',\r\n    name: 'Gato Malhado'\r\n  },\r\n  {\r\n    id: 'cat4',\r\n    url: '/assets/avatars/cat4.png',\r\n    name: 'Gato Siamês'\r\n  }\r\n];\r\n\r\n// Obter lista de avatares disponíveis\r\nexport const getAvailableAvatars = async () => {\r\n  try {\r\n    // Primeiro tenta buscar do backend\r\n    const response = await axios.get(`${API_URL}/api/avatars`);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Se falhar, retorna lista padrão\r\n    console.log('Usando lista padrão de avatares');\r\n    return defaultAvatars;\r\n  }\r\n};\r\n\r\n// Atualizar avatar do usuário\r\nexport const updateUserAvatar = async (avatarId) => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const response = await axios.put(\r\n    `${API_URL}/api/users/profile/avatar`,\r\n    { avatarId },\r\n    {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    }\r\n  );\r\n  \r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  getAvailableAvatars,\r\n  updateUserAvatar\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE;;AAEnD;AACA,MAAMC,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,MAAM;EACVC,GAAG,EAAE,0BAA0B;EAC/BC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,MAAM;EACVC,GAAG,EAAE,0BAA0B;EAC/BC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,MAAM;EACVC,GAAG,EAAE,0BAA0B;EAC/BC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,MAAM;EACVC,GAAG,EAAE,0BAA0B;EAC/BC,IAAI,EAAE;AACR,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,cAAc,CAAC;IAC1D,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,OAAOV,cAAc;EACvB;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAClD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMV,QAAQ,GAAG,MAAMV,KAAK,CAACqB,GAAG,CAC9B,GAAGpB,OAAO,2BAA2B,EACrC;IAAEgB;EAAS,CAAC,EACZ;IACEK,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUJ,KAAK;IAClC;EACF,CACF,CAAC;EAED,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAe;EACbH,mBAAmB;EACnBO;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}