{"ast":null,"code":"import axios from 'axios';\n\n// Determinar a baseURL com base no ambiente\nconst getBaseURL = () => {\n  const apiUrl = process.env.REACT_APP_API_URL;\n  if (apiUrl) {\n    return apiUrl;\n  }\n\n  // Para ambiente local\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    return 'http://localhost:5000';\n  }\n\n  // Para produção com proxy reverso (o /api será mapeado pelo NGINX)\n  return `${window.location.origin}/api`;\n};\nconst api = axios.create({\n  baseURL: getBaseURL(),\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 segundos\n});\n\n// Interceptador para adicionar token em todas as requisições\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Usar header x-auth-token para compatibilidade com o backend existente\n    config.headers['x-auth-token'] = token;\n\n    // Também adicionar no Authorization para maior compatibilidade\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptador para tratar erros de autenticação\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    // Não redirecionar automaticamente para não interromper o fluxo\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","getBaseURL","apiUrl","process","env","REACT_APP_API_URL","window","location","hostname","origin","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","_error$response","status","removeItem"],"sources":["C:/Users/ageno/OneDrive/Agenor Fernandes/Katmon/frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Determinar a baseURL com base no ambiente\r\nconst getBaseURL = () => {\r\n  const apiUrl = process.env.REACT_APP_API_URL;\r\n  \r\n  if (apiUrl) {\r\n    return apiUrl;\r\n  }\r\n  \r\n  // Para ambiente local\r\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n    return 'http://localhost:5000';\r\n  }\r\n  \r\n  // Para produção com proxy reverso (o /api será mapeado pelo NGINX)\r\n  return `${window.location.origin}/api`;\r\n};\r\n\r\nconst api = axios.create({\r\n  baseURL: getBaseURL(),\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  timeout: 10000 // 10 segundos\r\n});\r\n\r\n// Interceptador para adicionar token em todas as requisições\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // Usar header x-auth-token para compatibilidade com o backend existente\r\n      config.headers['x-auth-token'] = token;\r\n      \r\n      // Também adicionar no Authorization para maior compatibilidade\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptador para tratar erros de autenticação\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      // Não redirecionar automaticamente para não interromper o fluxo\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAE5C,IAAIH,MAAM,EAAE;IACV,OAAOA,MAAM;EACf;;EAEA;EACA,IAAII,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IAAIF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxF,OAAO,uBAAuB;EAChC;;EAEA;EACA,OAAO,GAAGF,MAAM,CAACC,QAAQ,CAACE,MAAM,MAAM;AACxC,CAAC;AAED,MAAMC,GAAG,GAAGV,KAAK,CAACW,MAAM,CAAC;EACvBC,OAAO,EAAEX,UAAU,CAAC,CAAC;EACrBY,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACT;IACAD,MAAM,CAACL,OAAO,CAAC,cAAc,CAAC,GAAGM,KAAK;;IAEtC;IACAD,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUM,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACK,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChC;EACF;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}