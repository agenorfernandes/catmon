{"ast":null,"code":"import axios from 'axios';\n\n// Determinar a baseURL com base no ambiente\nconst getBaseURL = () => {\n  if (process.env.REACT_APP_API_URL) {\n    return process.env.REACT_APP_API_URL;\n  }\n  const hostname = window.location.hostname;\n  const isLocalhost = hostname === 'localhost' || hostname === '127.0.0.1';\n  return isLocalhost ? 'http://localhost:5000' : `http://${hostname}:5000`;\n};\nconst api = axios.create({\n  baseURL: getBaseURL(),\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 segundos\n});\n\n// Interceptador para adicionar token em todas as requisições\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptador para tratar erros de autenticação\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Não redirecionar automaticamente, apenas limpar os dados\n    localStorage.removeItem('token');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","getBaseURL","process","env","REACT_APP_API_URL","hostname","window","location","isLocalhost","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem"],"sources":["C:/Users/ageno/OneDrive/Agenor Fernandes/Katmon/frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Determinar a baseURL com base no ambiente\r\nconst getBaseURL = () => {\r\n  if (process.env.REACT_APP_API_URL) {\r\n    return process.env.REACT_APP_API_URL;\r\n  }\r\n  const hostname = window.location.hostname;\r\n  const isLocalhost = hostname === 'localhost' || hostname === '127.0.0.1';\r\n  return isLocalhost ? 'http://localhost:5000' : `http://${hostname}:5000`;\r\n};\r\n\r\nconst api = axios.create({\r\n  baseURL: getBaseURL(),\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  timeout: 10000 // 10 segundos\r\n});\r\n\r\n// Interceptador para adicionar token em todas as requisições\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptador para tratar erros de autenticação\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Não redirecionar automaticamente, apenas limpar os dados\r\n      localStorage.removeItem('token');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,IAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAE;IACjC,OAAOF,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtC;EACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ;EACzC,MAAMG,WAAW,GAAGH,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAK,WAAW;EACxE,OAAOG,WAAW,GAAG,uBAAuB,GAAG,UAAUH,QAAQ,OAAO;AAC1E,CAAC;AAED,MAAMI,GAAG,GAAGT,KAAK,CAACU,MAAM,CAAC;EACvBC,OAAO,EAAEV,UAAU,CAAC,CAAC;EACrBW,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;EAClC;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}