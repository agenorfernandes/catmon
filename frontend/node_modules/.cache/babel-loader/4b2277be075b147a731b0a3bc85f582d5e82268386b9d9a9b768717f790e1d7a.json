{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ageno\\\\OneDrive\\\\Agenor Fernandes\\\\Katmon\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Verificar token ao iniciar\n  useEffect(() => {\n    const checkToken = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        // Verificar se o token é válido\n        const res = await axios.get('/api/auth/verify', {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        if (res.data.valid) {\n          // Obter dados do usuário\n          const userRes = await axios.get('/api/auth/me', {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          setUser(userRes.data);\n          setIsAuthenticated(true);\n        } else {\n          // Token inválido\n          localStorage.removeItem('token');\n        }\n      } catch (error) {\n        console.error('Erro ao verificar token:', error);\n        localStorage.removeItem('token');\n      }\n      setLoading(false);\n    };\n    checkToken();\n  }, []);\n\n  // Configurar interceptor para incluir token em todas as requisições\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Configurar cabeçalho para todas as requisições\n      axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n      // Remover cabeçalho se não houver token\n      delete axios.defaults.headers.common['x-auth-token'];\n    }\n\n    // Configurar interceptor para lidar com erros de autenticação\n    const interceptor = axios.interceptors.response.use(response => response, error => {\n      if (error.response && error.response.status === 401) {\n        // Token expirado ou inválido\n        logout();\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      // Remover interceptor ao desmontar\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, [isAuthenticated]);\n\n  // Função de login\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    setUser(userData);\n    setIsAuthenticated(true);\n\n    // Configurar cabeçalho para requisições\n    axios.defaults.headers.common['x-auth-token'] = token;\n  };\n\n  // Função de logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n\n    // Remover cabeçalho\n    delete axios.defaults.headers.common['x-auth-token'];\n  };\n\n  // Função para atualizar dados do usuário\n  const updateUser = userData => {\n    setUser(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      logout,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"w9926n1HY7utJLC4pccmAaI+eKY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkToken","token","localStorage","getItem","res","get","headers","data","valid","userRes","removeItem","error","console","defaults","common","interceptor","interceptors","response","use","status","logout","Promise","reject","eject","login","userData","setItem","updateUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ageno/OneDrive/Agenor Fernandes/Katmon/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  \n  // Verificar token ao iniciar\n  useEffect(() => {\n    const checkToken = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      \n      try {\n        // Verificar se o token é válido\n        const res = await axios.get('/api/auth/verify', {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        \n        if (res.data.valid) {\n          // Obter dados do usuário\n          const userRes = await axios.get('/api/auth/me', {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          \n          setUser(userRes.data);\n          setIsAuthenticated(true);\n        } else {\n          // Token inválido\n          localStorage.removeItem('token');\n        }\n      } catch (error) {\n        console.error('Erro ao verificar token:', error);\n        localStorage.removeItem('token');\n      }\n      \n      setLoading(false);\n    };\n    \n    checkToken();\n  }, []);\n  \n  // Configurar interceptor para incluir token em todas as requisições\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      // Configurar cabeçalho para todas as requisições\n      axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n      // Remover cabeçalho se não houver token\n      delete axios.defaults.headers.common['x-auth-token'];\n    }\n    \n    // Configurar interceptor para lidar com erros de autenticação\n    const interceptor = axios.interceptors.response.use(\n      response => response,\n      error => {\n        if (error.response && error.response.status === 401) {\n          // Token expirado ou inválido\n          logout();\n        }\n        \n        return Promise.reject(error);\n      }\n    );\n    \n    return () => {\n      // Remover interceptor ao desmontar\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, [isAuthenticated]);\n  \n  // Função de login\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    setUser(userData);\n    setIsAuthenticated(true);\n    \n    // Configurar cabeçalho para requisições\n    axios.defaults.headers.common['x-auth-token'] = token;\n  };\n  \n  // Função de logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n    \n    // Remover cabeçalho\n    delete axios.defaults.headers.common['x-auth-token'];\n  };\n  \n  // Função para atualizar dados do usuário\n  const updateUser = (userData) => {\n    setUser(userData);\n  };\n  \n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        login,\n        logout,\n        updateUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}