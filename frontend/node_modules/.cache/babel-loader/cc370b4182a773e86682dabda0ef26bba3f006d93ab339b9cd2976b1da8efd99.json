{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ageno\\\\OneDrive\\\\Agenor Fernandes\\\\Katmon\\\\frontend\\\\src\\\\pages\\\\CheckIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MapPin, Camera, AlertTriangle, Check, ArrowLeft } from 'react-feather';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Contextos\nimport { AuthContext } from '../contexts/AuthContext';\nimport { LocationContext } from '../contexts/LocationContext';\n\n// Componentes\nimport LoadingSpinner from '../components/Shared/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckIn = () => {\n  _s();\n  const {\n    catId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const {\n    userLocation\n  } = useContext(LocationContext);\n  const [cat, setCat] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [formData, setFormData] = useState({\n    actions: [],\n    actionsDescription: '',\n    healthStatus: '',\n    photos: [],\n    needs: [],\n    needsDescription: ''\n  });\n  const actionOptions = ['Alimentou', 'Deu água', 'Forneceu abrigo', 'Verificou bem-estar', 'Levou ao veterinário', 'Vacinou', 'Castrou', 'Outros'];\n  const healthOptions = ['Excelente', 'Bom', 'Regular', 'Precisa de atenção', 'Emergência'];\n  const needOptions = ['Água', 'Comida', 'Abrigo', 'Tratamento médico', 'Outros'];\n  useEffect(() => {\n    // Redirecionar se não estiver autenticado\n    if (!isAuthenticated) {\n      toast.error('Você precisa estar logado para fazer check-in');\n      navigate('/login', {\n        state: {\n          from: `/checkin/${catId}`\n        }\n      });\n      return;\n    }\n    const fetchCat = async () => {\n      if (!catId) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await axios.get(`/api/cats/${catId}`);\n        setCat(response.data.cat);\n\n        // Pré-preencher status de saúde com o status atual\n        setFormData(prevState => ({\n          ...prevState,\n          healthStatus: response.data.cat.health,\n          needs: response.data.cat.needs || []\n        }));\n        setLoading(false);\n      } catch (error) {\n        console.error('Erro ao carregar dados do gato:', error);\n        toast.error('Erro ao carregar dados do gato');\n        navigate('/');\n        setLoading(false);\n      }\n    };\n    fetchCat();\n  }, [catId, isAuthenticated, navigate]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleActionToggle = action => {\n    setFormData(prevState => {\n      const currentActions = [...prevState.actions];\n      if (currentActions.includes(action)) {\n        // Remover ação\n        return {\n          ...prevState,\n          actions: currentActions.filter(a => a !== action)\n        };\n      } else {\n        // Adicionar ação\n        return {\n          ...prevState,\n          actions: [...currentActions, action]\n        };\n      }\n    });\n  };\n  const handleNeedToggle = need => {\n    setFormData(prevState => {\n      const currentNeeds = [...prevState.needs];\n      if (currentNeeds.includes(need)) {\n        // Remover necessidade\n        return {\n          ...prevState,\n          needs: currentNeeds.filter(n => n !== need)\n        };\n      } else {\n        // Adicionar necessidade\n        return {\n          ...prevState,\n          needs: [...currentNeeds, need]\n        };\n      }\n    });\n  };\n  const handlePhotoChange = e => {\n    const files = Array.from(e.target.files);\n\n    // Validar arquivos (apenas imagens, max 5)\n    if (files.length > 5) {\n      toast.warning('Máximo de 5 fotos permitidas');\n      return;\n    }\n    setFormData({\n      ...formData,\n      photos: files\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userLocation) {\n      toast.error('Localização não disponível. Permita o acesso à sua localização.');\n      return;\n    }\n    if (formData.actions.length === 0) {\n      toast.error('Selecione pelo menos uma ação realizada');\n      return;\n    }\n    if (!formData.healthStatus) {\n      toast.error('Selecione o estado de saúde do gato');\n      return;\n    }\n    try {\n      setSubmitting(true);\n\n      // Criar objeto FormData para envio de arquivos\n      const checkInData = new FormData();\n      checkInData.append('catId', catId);\n\n      // Adicionar localização\n      const location = {\n        type: 'Point',\n        coordinates: [userLocation.longitude, userLocation.latitude],\n        address: 'Localização atual' // Idealmente, fazer geocodificação reversa aqui\n      };\n      checkInData.append('location', JSON.stringify(location));\n\n      // Adicionar ações\n      formData.actions.forEach(action => {\n        checkInData.append('actions', action);\n      });\n\n      // Adicionar outros campos\n      if (formData.actionsDescription) {\n        checkInData.append('actionsDescription', formData.actionsDescription);\n      }\n      checkInData.append('healthStatus', formData.healthStatus);\n\n      // Adicionar fotos\n      if (formData.photos.length > 0) {\n        formData.photos.forEach(photo => {\n          checkInData.append('photos', photo);\n        });\n      }\n\n      // Adicionar necessidades\n      if (formData.needs.length > 0) {\n        formData.needs.forEach(need => {\n          checkInData.append('needs', need);\n        });\n      }\n      if (formData.needsDescription) {\n        checkInData.append('needsDescription', formData.needsDescription);\n      }\n\n      // Enviar check-in\n      await axios.post('/api/checkins', checkInData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'x-auth-token': localStorage.getItem('token')\n        }\n      });\n      toast.success('Check-in realizado com sucesso!');\n      navigate(`/cat/${catId}`);\n    } catch (error) {\n      console.error('Erro ao realizar check-in:', error);\n      toast.error('Erro ao realizar check-in. Tente novamente.');\n      setSubmitting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkin-page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckIn, \"V7fWiKYlhevYqHRnjSwFFSjBQ/A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CheckIn;\nexport default CheckIn;\nvar _c;\n$RefreshReg$(_c, \"CheckIn\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","MapPin","Camera","AlertTriangle","Check","ArrowLeft","axios","toast","AuthContext","LocationContext","LoadingSpinner","jsxDEV","_jsxDEV","CheckIn","_s","catId","navigate","isAuthenticated","userLocation","cat","setCat","loading","setLoading","submitting","setSubmitting","formData","setFormData","actions","actionsDescription","healthStatus","photos","needs","needsDescription","actionOptions","healthOptions","needOptions","error","state","from","fetchCat","response","get","data","prevState","health","console","handleChange","e","name","value","target","handleActionToggle","action","currentActions","includes","filter","a","handleNeedToggle","need","currentNeeds","n","handlePhotoChange","files","Array","length","warning","handleSubmit","preventDefault","checkInData","FormData","append","location","type","coordinates","longitude","latitude","address","JSON","stringify","forEach","photo","post","headers","localStorage","getItem","success","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/ageno/OneDrive/Agenor Fernandes/Katmon/frontend/src/pages/CheckIn.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MapPin, Camera, AlertTriangle, Check, ArrowLeft } from 'react-feather';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Contextos\nimport { AuthContext } from '../contexts/AuthContext';\nimport { LocationContext } from '../contexts/LocationContext';\n\n// Componentes\nimport LoadingSpinner from '../components/Shared/LoadingSpinner';\n\nconst CheckIn = () => {\n  const { catId } = useParams();\n  const navigate = useNavigate();\n  const { isAuthenticated } = useContext(AuthContext);\n  const { userLocation } = useContext(LocationContext);\n  \n  const [cat, setCat] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  \n  const [formData, setFormData] = useState({\n    actions: [],\n    actionsDescription: '',\n    healthStatus: '',\n    photos: [],\n    needs: [],\n    needsDescription: ''\n  });\n  \n  const actionOptions = [\n    'Alimentou',\n    'Deu água',\n    'Forneceu abrigo',\n    'Verificou bem-estar',\n    'Levou ao veterinário',\n    'Vacinou',\n    'Castrou',\n    'Outros'\n  ];\n  \n  const healthOptions = [\n    'Excelente',\n    'Bom',\n    'Regular',\n    'Precisa de atenção',\n    'Emergência'\n  ];\n  \n  const needOptions = [\n    'Água',\n    'Comida',\n    'Abrigo',\n    'Tratamento médico',\n    'Outros'\n  ];\n  \n  useEffect(() => {\n    // Redirecionar se não estiver autenticado\n    if (!isAuthenticated) {\n      toast.error('Você precisa estar logado para fazer check-in');\n      navigate('/login', { state: { from: `/checkin/${catId}` } });\n      return;\n    }\n    \n    const fetchCat = async () => {\n      if (!catId) {\n        setLoading(false);\n        return;\n      }\n      \n      try {\n        const response = await axios.get(`/api/cats/${catId}`);\n        setCat(response.data.cat);\n        \n        // Pré-preencher status de saúde com o status atual\n        setFormData(prevState => ({\n          ...prevState,\n          healthStatus: response.data.cat.health,\n          needs: response.data.cat.needs || []\n        }));\n        \n        setLoading(false);\n      } catch (error) {\n        console.error('Erro ao carregar dados do gato:', error);\n        toast.error('Erro ao carregar dados do gato');\n        navigate('/');\n        setLoading(false);\n      }\n    };\n    \n    fetchCat();\n  }, [catId, isAuthenticated, navigate]);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n  \n  const handleActionToggle = (action) => {\n    setFormData(prevState => {\n      const currentActions = [...prevState.actions];\n      \n      if (currentActions.includes(action)) {\n        // Remover ação\n        return {\n          ...prevState,\n          actions: currentActions.filter(a => a !== action)\n        };\n      } else {\n        // Adicionar ação\n        return {\n          ...prevState,\n          actions: [...currentActions, action]\n        };\n      }\n    });\n  };\n  \n  const handleNeedToggle = (need) => {\n    setFormData(prevState => {\n      const currentNeeds = [...prevState.needs];\n      \n      if (currentNeeds.includes(need)) {\n        // Remover necessidade\n        return {\n          ...prevState,\n          needs: currentNeeds.filter(n => n !== need)\n        };\n      } else {\n        // Adicionar necessidade\n        return {\n          ...prevState,\n          needs: [...currentNeeds, need]\n        };\n      }\n    });\n  };\n  \n  const handlePhotoChange = (e) => {\n    const files = Array.from(e.target.files);\n    \n    // Validar arquivos (apenas imagens, max 5)\n    if (files.length > 5) {\n      toast.warning('Máximo de 5 fotos permitidas');\n      return;\n    }\n    \n    setFormData({ ...formData, photos: files });\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!userLocation) {\n      toast.error('Localização não disponível. Permita o acesso à sua localização.');\n      return;\n    }\n    \n    if (formData.actions.length === 0) {\n      toast.error('Selecione pelo menos uma ação realizada');\n      return;\n    }\n    \n    if (!formData.healthStatus) {\n      toast.error('Selecione o estado de saúde do gato');\n      return;\n    }\n    \n    try {\n      setSubmitting(true);\n      \n      // Criar objeto FormData para envio de arquivos\n      const checkInData = new FormData();\n      checkInData.append('catId', catId);\n      \n      // Adicionar localização\n      const location = {\n        type: 'Point',\n        coordinates: [userLocation.longitude, userLocation.latitude],\n        address: 'Localização atual' // Idealmente, fazer geocodificação reversa aqui\n      };\n      checkInData.append('location', JSON.stringify(location));\n      \n      // Adicionar ações\n      formData.actions.forEach(action => {\n        checkInData.append('actions', action);\n      });\n      \n      // Adicionar outros campos\n      if (formData.actionsDescription) {\n        checkInData.append('actionsDescription', formData.actionsDescription);\n      }\n      \n      checkInData.append('healthStatus', formData.healthStatus);\n      \n      // Adicionar fotos\n      if (formData.photos.length > 0) {\n        formData.photos.forEach(photo => {\n          checkInData.append('photos', photo);\n        });\n      }\n      \n      // Adicionar necessidades\n      if (formData.needs.length > 0) {\n        formData.needs.forEach(need => {\n          checkInData.append('needs', need);\n        });\n      }\n      \n      if (formData.needsDescription) {\n        checkInData.append('needsDescription', formData.needsDescription);\n      }\n      \n      // Enviar check-in\n      await axios.post('/api/checkins', checkInData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'x-auth-token': localStorage.getItem('token')\n        }\n      });\n      \n      toast.success('Check-in realizado com sucesso!');\n      navigate(`/cat/${catId}`);\n    } catch (error) {\n      console.error('Erro ao realizar check-in:', error);\n      toast.error('Erro ao realizar check-in. Tente novamente.');\n      setSubmitting(false);\n    }\n  };\n  \n  if (loading) {\n    return <LoadingSpinner />;\n  }\n  \n  return (\n    <div className=\"checkin-page\">\n      {/* Resto do componente permanece o mesmo */}\n    </div>\n  );\n};\n\nexport default CheckIn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}