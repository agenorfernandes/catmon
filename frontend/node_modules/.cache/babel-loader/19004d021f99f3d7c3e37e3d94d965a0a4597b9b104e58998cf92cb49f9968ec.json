{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ageno\\\\OneDrive\\\\Agenor Fernandes\\\\Katmon\\\\frontend\\\\src\\\\components\\\\Shared\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useContext(AuthContext);\n  const location = useLocation();\n  if (loading) {\n    // Pode-se adicionar um spinner de carregamento aqui\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isAuthenticated) {\n    // Redirecionar para login, salvando o local de onde veio para redirecionamento posterior\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location.pathname\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"fY3v1+0TItfhUajJqQZT3+gcSos=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","loading","location","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","pathname","replace","_c","$RefreshReg$"],"sources":["C:/Users/ageno/OneDrive/Agenor Fernandes/Katmon/frontend/src/components/Shared/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { AuthContext } from '../../contexts/AuthContext';\n\nconst PrivateRoute = ({ children }) => {\n  const { isAuthenticated, loading } = useContext(AuthContext);\n  const location = useLocation();\n\n  if (loading) {\n    // Pode-se adicionar um spinner de carregamento aqui\n    return <div>Carregando...</div>;\n  }\n\n  if (!isAuthenticated) {\n    // Redirecionar para login, salvando o local de onde veio para redirecionamento posterior\n    return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\n  }\n\n  return children;\n};\n\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;EAC5D,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,IAAIQ,OAAO,EAAE;IACX;IACA,oBAAOL,OAAA;MAAAE,QAAA,EAAK;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,IAAI,CAACN,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA,CAACJ,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEP,QAAQ,CAACQ;MAAS,CAAE;MAACC,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7E;EAEA,OAAOR,QAAQ;AACjB,CAAC;AAACC,EAAA,CAfIF,YAAY;EAAA,QAECJ,WAAW;AAAA;AAAAmB,EAAA,GAFxBf,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}